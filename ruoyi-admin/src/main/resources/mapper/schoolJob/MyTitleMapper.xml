<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.schoolJob.mapper.MyTitleMapper">
    
    <resultMap type="MyTitle" id="MyTitleResult">
        <result property="titleId"    column="title_id"    />
        <result property="titleName"    column="title_name"    />
        <result property="description"    column="description"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="upload"    column="upload"    />
        <result property="classId"    column="class_id"    />
    </resultMap>

    <resultMap id="MyTitleMyClassResult" type="MyTitle" extends="MyTitleResult">
        <collection property="myClassList" notNullColumn="sub_class_id" javaType="java.util.List" resultMap="MyClassResult" />
    </resultMap>

    <resultMap type="MyClass" id="MyClassResult">
        <result property="classId"    column="sub_class_id"    />
        <result property="className"    column="sub_class_name"    />
        <result property="userId"    column="sub_user_id"    />
    </resultMap>

    <sql id="selectMyTitleVo">
        select title_id, title_name, description, start_time, end_time, upload, class_id from my_title
    </sql>

    <select id="selectMyTitleList" parameterType="MyTitle" resultMap="MyTitleResult">
        <include refid="selectMyTitleVo"/>
        <where>  
            <if test="titleName != null  and titleName != ''"> and title_name like concat('%', #{titleName}, '%')</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="startTime != null "> and start_time = #{startTime}</if>
            <if test="endTime != null "> and end_time = #{endTime}</if>
            <if test="upload != null  and upload != ''"> and upload = #{upload}</if>
            <if test="classId != null "> and class_id = #{classId}</if>
        </where>
    </select>
    
    <select id="selectMyTitleByTitleId" parameterType="Long" resultMap="MyTitleMyClassResult">
        select a.title_id, a.title_name, a.description, a.start_time, a.end_time, a.upload, a.class_id,
 b.class_id as sub_class_id, b.class_name as sub_class_name, b.user_id as sub_user_id
        from my_title a
        left join my_class b on b.class_id = a.title_id
        where a.title_id = #{titleId}
    </select>
        
    <insert id="insertMyTitle" parameterType="MyTitle">
        insert into my_title
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="titleId != null">title_id,</if>
            <if test="titleName != null">title_name,</if>
            <if test="description != null">description,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="upload != null">upload,</if>
            <if test="classId != null">class_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="titleId != null">#{titleId},</if>
            <if test="titleName != null">#{titleName},</if>
            <if test="description != null">#{description},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="upload != null">#{upload},</if>
            <if test="classId != null">#{classId},</if>
         </trim>
    </insert>

    <update id="updateMyTitle" parameterType="MyTitle">
        update my_title
        <trim prefix="SET" suffixOverrides=",">
            <if test="titleName != null">title_name = #{titleName},</if>
            <if test="description != null">description = #{description},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="upload != null">upload = #{upload},</if>
            <if test="classId != null">class_id = #{classId},</if>
        </trim>
        where title_id = #{titleId}
    </update>

    <delete id="deleteMyTitleByTitleId" parameterType="Long">
        delete from my_title where title_id = #{titleId}
    </delete>

    <delete id="deleteMyTitleByTitleIds" parameterType="String">
        delete from my_title where title_id in 
        <foreach item="titleId" collection="array" open="(" separator="," close=")">
            #{titleId}
        </foreach>
    </delete>
    
    <delete id="deleteMyClassByClassIds" parameterType="String">
        delete from my_class where class_id in 
        <foreach item="classId" collection="array" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </delete>

    <delete id="deleteMyClassByClassId" parameterType="Long">
        delete from my_class where class_id = #{classId}
    </delete>

    <insert id="batchMyClass">
        insert into my_class( class_id, class_name, user_id) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.classId}, #{item.className}, #{item.userId})
        </foreach>
    </insert>
</mapper>